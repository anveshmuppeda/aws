AWSTemplateFormatVersion: 2010-09-09
Description: A Python web service deployed to AWS Lambda.

Parameters:
  ProjectId:
    AllowedPattern: ^[a-z]([a-z0-9-])+$
    Description: Project ID.
    MaxLength: 15
    MinLength: 2
    Type: String
  DevelopmentEnvironment:
    Description: Setup the development environment
    AllowedValues: [true, false]
    Default: true
    Type: String

  # About Git
  RepositoryBranch:
    Default: master
    Description: Git branch name.
    Type: String
  RepositoryName:
    Description: Git repository name.
    MaxLength: 100
    MinLength: 1
    Type: String
    Default: default
  RepositoryProvider:
    AllowedValues: [GitHub, CodeCommit]
    Default: CodeCommit
    Description: Repository provider.
    Type: String
  UseExistingRepo:
    Type: String
    AllowedValues: [true, false, default]
    Default: default
  RepositoryURL:
    Description: GitHub repository URL.
    Type: String
    Default: default

  # Github specific
  RepositoryProviderUsername:
    Description: GitHub user name.
    Type: String
    Default: none
  RepositoryToken:
    Description: GitHub access token.
    NoEcho: true
    Type: String
    Default: none
  RepositoryEnableIssues:
    AllowedValues: [true, false]
    Default: false
    Description: Whether the GitHub issues tile is enabled.
    Type: String

Mappings:
  DefaultGitConfig:
    CodeCommit:
      Url: asd
#        Fn::Sub: "https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${ProjectId}"
    GitHub:
      Url: asd
#        Fn::Sub: "https://github.com/${RepositoryProviderUsername}/${ProjectId}.git"

Conditions:
  CreateCodeBuildResources:
    Fn::Equals:
      - true
      - true
  CreateWebSiteS3Bucket:
    Fn::Equals:
      - false
      - true
  BuildCloudCommitRepo:
    Fn::And:
      - Fn::Equals: [ Ref: RepositoryProvider, CodeCommit ]
      - Fn::Or:
        - Fn::Equals: [ Ref: UseExistingRepo, false ]
        - Fn::Equals: [ Ref: UseExistingRepo, default ]
  BuildDevEnvironment:
    Fn::Equals:
      - Ref: DevelopmentEnvironment
      - true

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Application
      Parameters:
      - ProjectId
  CodeBuildImage: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
  CodeBuildImageOverride: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
  IsWebsite: false
  ProjectTemplateId: webservice-pythonservice-lambda
  WebsiteS3Bucket:
    Ref: 'WebsiteS3Bucket'

Outputs:
  LambdaTrustRole:
    Description: AWS CodeStar role for AWS Lambda used for passRole to Lambda functions.
    Export:
      Name:
        Fn::Join:
          - '-'
          - - Ref: 'ProjectId'
            - Ref: 'AWS::Region'
            - LambdaTrustRole
    Value:
      Fn::GetAtt: 'LambdaTrustRole.Arn'

Resources:
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetObjectVersion
            Effect: Allow
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: 'S3Bucket'
            - Fn::Join:
              - ''
              - - 'arn:aws:s3:::'
                - Ref: 'S3Bucket'
                - /*
          - Action:
            - codestar:SyncResources
            - lambda:CreateFunction
            - lambda:DeleteFunction
            - lambda:AddPermission
            - lambda:UpdateFunction
            - lambda:UpdateFunctionCode
            - lambda:GetFunction
            - lambda:GetFunctionConfiguration
            - lambda:UpdateFunctionConfiguration
            - lambda:RemovePermission
            - lambda:listTags
            - lambda:TagResource
            - lambda:UntagResource
            - apigateway:*
            - dynamodb:CreateTable
            - dynamodb:DeleteTable
            - dynamodb:DescribeTable
            - kinesis:CreateStream
            - kinesis:DeleteStream
            - kinesis:DescribeStream
            - sns:CreateTopic
            - sns:DeleteTopic
            - sns:ListTopics
            - sns:GetTopicAttributes
            - sns:SetTopicAttributes
            - s3:CreateBucket
            - s3:DeleteBucket
            - config:DescribeConfigRules
            - config:PutConfigRule
            - config:DeleteConfigRule
            Effect: Allow
            Resource: '*'
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - LambdaTrustRole
              - Arn
          - Action:
            - cloudformation:CreateChangeSet
            Effect: Allow
            Resource:
            - arn:aws:cloudformation:us-west-2:aws:transform/Serverless-2016-10-31
            - arn:aws:cloudformation:us-west-2:aws:transform/CodeStar
        PolicyName: CodeStarWorkerCloudFormationRolePolicy
      RoleName:
        Fn::Join:
          - '-'
          - - CodeStarWorker
            - Ref: 'ProjectId'
            - CloudFormation
    Type: AWS::IAM::Role
  CodeBuildPolicy:
    Condition: CreateCodeBuildResources
    Description: Setting IAM policy for service role for Amazon EC2 instances
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: 'S3Bucket'
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: 'S3Bucket'
              - /*
        - Fn::If:
            - CreateWebSiteS3Bucket
            - Action:
              - s3:PutObject*
              - s3:GetObject
              - s3:GetObjectVersion
              Effect: Allow
              Resource:
              - Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: 'WebsiteS3Bucket'
              - Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: 'WebsiteS3Bucket'
                  - /*
            - Ref: 'AWS::NoValue'
        - Action:
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          Effect: Allow
          Resource:
          - Fn::Join:
            - ':'
            - - arn:aws:kms
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - Fn::Join:
                - /
                - - alias
                  - aws/s3
      PolicyName: CodeStarWorkerCodeBuildPolicy
      Roles:
      - Ref: 'CodeBuildRole'
    Type: AWS::IAM::Policy
  CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
    - CodeBuildPolicy
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Description:
        Fn::Join:
          - ''
          - - 'AWS CodeStar created CodeBuild Project for '
            - Ref: ProjectId
      Environment:
        ComputeType: small
        EnvironmentVariables:
        - Name: S3_BUCKET
          Value:
            Ref: 'S3Bucket'
        - Name: WEBSITE_S3_PREFIX
          Value:
            Fn::If:
              - CreateWebSiteS3Bucket
              - Fn::Join:
                - ''
                - - https://s3-us-west-2.amazonaws.com/
                  - Ref: 'WebsiteS3Bucket'
              - NoVal
        - Name: WEBSITE_S3_BUCKET
          Value:
            Fn::If:
              - CreateWebSiteS3Bucket
              - Ref: 'WebsiteS3Bucket'
              - NoVal
        Image: aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0
        Type: container
      Name:
        Ref: 'ProjectId'
      ServiceRole:
        Ref: 'CodeBuildRole'
      Source:
        Type: codepipeline
    Type: AWS::CodeBuild::Project
  CodeBuildRole:
    Condition: CreateCodeBuildResources
    Description: Creating service role in IAM for Amazon EC2 instances
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName:
        Fn::Join:
          - '-'
          - - CodeStarWorker
            - Ref: 'ProjectId'
            - CodeBuild
    Type: AWS::IAM::Role

  CodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Condition: BuildCloudCommitRepo
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      RepositoryDescription:
        Fn::Join:
        - ''
        - - {Ref: ProjectId}
          - ' project repository'
      RepositoryName:
        "Fn::If" : [ { "Fn::Equals" : [ { "Ref" : "RepositoryName" }, "default" ] }, { "Ref" : "ProjectId" }, { "Ref" : "RepositoryName" } ]

  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Sid: 1
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            - s3:PutObject
            Effect: Allow
            Resource:
            - Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: 'S3Bucket'
            - Fn::Join:
                - ''
                - - 'arn:aws:s3:::'
                  - Ref: 'S3Bucket'
                  - "/*"
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - codebuild:StopBuild
            Effect: Allow
            Resource:
            - Fn::GetAtt: 'CodeBuildProject.Arn'
          - Action:
            - cloudformation:DescribeStacks
            - cloudformation:DescribeChangeSet
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:ExecuteChangeSet
            Effect: Allow
            Resource:
            - Fn::Join:
                - ':'
                - - arn
                  - aws
                  - cloudformation
                  - Ref: 'AWS::Region'
                  - Ref: 'AWS::AccountId'
                  - Fn::Join:
                    - /
                    - - stack
                      - Fn::Join:
                        - '-'
                        - - awscodestar
                          - Ref: 'ProjectId'
                          - lambda
                      - '*'
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - Fn::GetAtt:
              - CloudFormationTrustRole
              - Arn
        PolicyName: CodeStarWorkerCodePipelineRolePolicy
      RoleName:
        Fn::Join:
          - '-'
          - - CodeStarWorker
            - Ref: 'ProjectId'
            - CodePipeline
    Type: AWS::IAM::Role
  CodeStarProject:
    Description: Starting project creation
    Properties:
      ProjectDescription: AWS CodeStar created project
      ProjectId:
        Ref: ProjectId
      ProjectName:
        Ref: ProjectId
      ProjectTemplateId: arn:aws:codestar:us-west-2::project-template/github/webservice-pythonservice-lambda
      StackId:
        Ref: 'AWS::StackId'
    Type: AWS::CodeStar::Project
    Version: 1.0

  EnvironmentEC23fd7af6a4f1411e882fb290aa2a9d512:
    Type: AWS::Cloud9::EnvironmentEC2
    Condition: BuildDevEnvironment
    Properties:
      AutomaticStopTimeMinutes: '30'
      Description: Created from CodeStar.
      InstanceType: t2.micro
      Name:
        Ref: ProjectId
      Repositories:
        - PathComponent:
            Fn::Sub: "/${ProjectId}"
          RepositoryUrl:
            Fn::If:
              - Fn::Equals: [ Ref: RepositoryURL, default ]
              - Fn::FindInMap: [ DefaultGitConfig, Ref: RepositoryProvider, Url ]
              - Ref: RepositoryURL
      SubnetId: subnet-b0f192ea

  LambdaTrustRole:
    Description: Creating service role in IAM for AWS Lambda
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
          Version: 2012-10-17
        PolicyName: CodeStarLambdaWorkerPolicy
      RoleName:
        Fn::Join:
          - '-'
          - - CodeStarWorker
            - Ref: 'ProjectId'
            - Lambda
    Type: AWS::IAM::Role

  ProjectPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - SeedRepo
      - LambdaTrustRole
      - CodePipelineTrustRole
      - S3Bucket
      - CodeBuildProject
      - CloudFormationTrustRole
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: 'S3Bucket'
        Type: S3
      Name:
        Fn::Join:
          - '-'
          - - Ref: 'ProjectId'
            - Pipeline
      RoleArn:
        Fn::GetAtt:
          - CodePipelineTrustRole
          - Arn
      Stages:
        - Name: Source
          Actions:
            - Fn::If:
                - Fn::Equals: [ Ref: RepositoryProvider, GitHub ]
                - ActionTypeId:
                    Category: Source
                    Owner: ThirdParty
                    Provider: GitHub
                    Version: 1
                  Configuration:
                    Branch:
                      Ref: 'RepositoryBranch'
                    OAuthToken:
                      Ref: 'RepositoryToken'
                    Owner:
                      Ref: 'RepositoryProviderUsername'
                  Repo:
                    "Fn::If" : [ { "Fn::Equals" : [ { "Ref" : "RepositoryName" }, "default" ] }, { "Ref" : "ProjectId" }, { "Ref" : "RepositoryName" } ]
                  InputArtifacts: [ ]
                  Name: ApplicationSource
                  OutputArtifacts:
                    - Name:
                        Fn::Join:
                          - '-'
                          - - Ref: 'ProjectId'
                            - SourceArtifact
                  RunOrder: 1
                - ActionTypeId: {Category: Source, Owner: AWS, Provider: CodeCommit, Version: 1}
                  Configuration:
                    BranchName: master
                    PollForSourceChanges: false
                    RepositoryName:
                      "Fn::If" : [ { "Fn::Equals" : [ { "Ref" : "RepositoryName" }, "default" ] }, { "Ref" : "ProjectId" }, { "Ref" : "RepositoryName" } ]
                  InputArtifacts: []
                  Name: ApplicationSource
                  OutputArtifacts:
                    - Name:
                        Fn::Join:
                          - '-'
                          - - {Ref: ProjectId}
                            - SourceArtifact
                  RunOrder: 1
        - Name: Build
          Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:
                  Ref: 'ProjectId'
              InputArtifacts:
                - Name:
                    Fn::Join:
                      - '-'
                      - - Ref: 'ProjectId'
                        - SourceArtifact
              Name: PackageExport
              OutputArtifacts:
                - Name:
                    Fn::Join:
                      - '-'
                      - - Ref: 'ProjectId'
                        - BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: pipeline-changeset
                ParameterOverrides:
                  Fn::Join:
                    - ''
                    - - '{"ProjectId":"'
                      - Ref: 'ProjectId'
                      - '"}'
                RoleArn:
                  Fn::GetAtt::
                    - CloudFormationTrustRole
                    - Arn
                StackName:
                  Fn::Join:
                    - '-'
                    - - awscodestar
                      - Ref: 'ProjectId'
                      - lambda
                TemplatePath:
                  Fn::Join:
                    - ''
                    - - Ref: 'ProjectId'
                      - "-BuildArtifact"
                      - ::template-export.yml
              InputArtifacts:
                - Name:
                    Fn::Join:
                      - '-'
                      - - Ref: 'ProjectId'
                        - BuildArtifact
              Name: GenerateChangeSet
              OutputArtifacts: [ ]
              RunOrder: 1
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
                StackName:
                  Fn::Join:
                    - '-'
                    - - awscodestar
                      - Ref: 'ProjectId'
                      - lambda
              InputArtifacts: [ ]
              Name: ExecuteChangeSet
              OutputArtifacts: [ ]
              RunOrder: 2

  S3ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket:
        Ref: 'S3Bucket'
      PolicyDocument:
        Id: SSEAndSSLPolicy
        Statement:
        - Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          Condition:
            Bool:
              aws:SecureTransport: false
          Effect: Allow
          Principal:
            AWS:
            - Fn::GetAtt:
              - CodePipelineTrustRole
              - Arn
            - Fn::GetAtt:
              - CodeBuildRole
              - Arn
            - Fn::GetAtt:
              - CloudFormationTrustRole
              - Arn
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: 'S3Bucket'
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: 'S3Bucket'
              - "/*"
          Sid: WhitelistedGet
        - Action:
          - s3:PutObject
          Effect: Allow
          Principal:
            AWS:
            - Fn::GetAtt:
              - CodePipelineTrustRole
              - Arn
            - Fn::GetAtt:
              - CodeBuildRole
              - Arn
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: 'S3Bucket'
          - Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: 'S3Bucket'
              - "/*"
          Sid: WhitelistedPut
        Version: 2012-10-17

  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName:
        Fn::Join:
          - '-'
          - - aws
            - codestar
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - Ref: 'ProjectId'
            - pipe
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - - Ref: 'ProjectId'
                - S3Bucket
      VersioningConfiguration:
        Status: Enabled

  SeedRepo:
    Type: AWS::CodeStar::SeedRepository
    DeletionPolicy: Retain
    Description: Adding application source code to the GitHub repository for the project.
    Properties:
      DefaultBranchName:
        Ref: 'RepositoryBranch'
      ProjectId:
        Ref: 'ProjectId'
      ProjectTemplateId: arn:aws:codestar:us-west-2::project-template/github/webservice-pythonservice-lambda
      RepositoryProvider:
        Ref: 'RepositoryProvider'
      RepositoryProviderUsername:
        Ref: 'RepositoryProviderUsername'
      RepositoryToken:
        Ref: 'RepositoryToken'
      RepositoryURL:
        Fn::If:
          - Fn::Equals: [ Ref: RepositoryURL, default ]
          - Fn::FindInMap: [ DefaultGitConfig, Ref: RepositoryProvider, Url ]
          - Ref: RepositoryURL

  SyncInitialResources:
    Type: AWS::CodeStar::SyncResources
    Version: 1.0
    DependsOn:
      - SeedRepo
    Description: Getting GitHub issues tile settings for your AWS CodeStar project.
    Properties:
      ProjectId:
        Ref: 'ProjectId'

  SyncResources:
    Type: AWS::CodeStar::SyncResources
    Version: 1.0
    DependsOn:
      - SeedRepo
      - CodeBuildProject
      - ProjectPipeline
      - SyncInitialResources
    Description: Adding all created resources to your AWS CodeStar project
    Properties:
      ProjectId:
        Ref: 'ProjectId'

  WebsiteS3Bucket:
    Condition: CreateWebSiteS3Bucket
    DeletionPolicy: Retain
    Description: Creating Amazon S3 bucket for Website static artifacts
    Properties:
      BucketName:
        Fn::Join:
          - '-'
          - - aws
            - codestar
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - Ref: 'ProjectId'
            - app
      Tags:
      - Key: Name
        Value:
          Fn::Join:
            - '-'
            - - Ref: 'ProjectId'
              - WebsiteS3Bucket
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket


